#/*-----------------------------------------------------------------------------*
# *                                                                             *
# *       Copyright © 2010 STABILIT Informatik AG, Switzerland                  *
# *                                                                             *
# *  Licensed under the Apache License, Version 2.0 (the "License");            *
# *  you may not use this file except in compliance with the License.           *
# *  You may obtain a copy of the License at                                    *
# *                                                                             *
# *  http://www.apache.org/licenses/LICENSE-2.0                                 *
# *                                                                             *
# *  Unless required by applicable law or agreed to in writing, software        *
# *  distributed under the License is distributed on an "AS IS" BASIS,          *
# *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   *
# *  See the License for the specific language governing permissions and        *
# *  limitations under the License.                                             *
# *-----------------------------------------------------------------------------*/
# 
# Usage of log levels inside the service connector:
# =================================================
# Log levels: ALL, TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF
#
#  FATAL -	fatal error, the execution cannot continue. The only possible action 
#						after this error is System.exit(1); 
#						The cause must be investigated and corrected before restart.
#  ERROR - 	serious error which can be recovered. The execution may continue
#						but error cause must be investigated and corrected.
#  WARN - 	expected error that has been successfully recovered. 
#						Signal to take a corrective action in the future.
#						This is the production set-up for maximum performance. 
#  INFO - 	Highly important event, documenting a significant activity.
#						This is the production set-up for normal performance producing  
#						reasonable (not too high) amount of output.
#  DEBUG - 	Importance event, used to document regular activity.
#						Can be enabled for trouleshooting.
#  TRACE - 	Event used to track down problem in a particular area.
#						Must be selectively enabled for a particular class or branch 
#
# Read log4j documentation at: http://logging.apache.org/log4j/1.2/manual.html 
#
#
#  Instructions for use of OS environement variables and java system properties.
#  ============================================================================= 
#	OS Environment variables can be passed on the command line as -Dvariable=%OS_VARIABLE%
#	and can be accesses here with the syntax ${variable}
#	E.g. log path defined as OS environment variable LOG_DIR can be passed
#	on the command line as -Dlogdir=%LOG_DIR% and then used in this file as:
# 		logPath=${logdir}
#
#	Java system properties can be accesses here with the syntax ${property}
#	E.g. java system property file.separator can be used in this file as:
#		fs=${file.separator}
#							  	
#	For list of available java system properties see:
#	http://download.oracle.com/javase/tutorial/essential/environment/sysprop.html
# -------------------------------------------------------------------------------

fs=${file.separator}
logPath=..${fs}logs${fs}console

# All logging output sent to standard out and a file
# WARN is default logging level
log4j.rootLogger=WARN, console, generalLog

# console
log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss.SSSZ} [%t] %-5p (%c:%L) - %m%n

# generalLog
log4j.additivity.generalLog=false
log4j.appender.generalLog=org.apache.log4j.DailyRollingFileAppender
log4j.appender.generalLog.DatePattern='.'yyyy-MM-dd
log4j.appender.generalLog.File=${logPath}${fs}console.log
log4j.appender.generalLog.layout=org.apache.log4j.PatternLayout
log4j.appender.generalLog.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss.SSSZ} [%t] %-5p (%c:%L) - %m%n

# connectionLog
# INFO level for connection creation and deletion
# DEBUG level for read buffer, write buffer, send keepalive 
log4j.logger.ConnectionLogger=OFF, connectionLog
log4j.additivity.ConnectionLogger=false
log4j.appender.connectionLog=org.apache.log4j.DailyRollingFileAppender
log4j.appender.connectionLog.DatePattern='.'yyyy-MM-dd
log4j.appender.connectionLog.File=${logPath}${fs}connection.log
log4j.appender.connectionLog.layout=org.apache.log4j.PatternLayout
log4j.appender.connectionLog.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss.SSSZ} [%t] %-5p - %m%n

# messageLog
# INFO important message attributes
# DEBUG all message attributes
log4j.logger.MessageLogger=OFF, messageLog
log4j.additivity.MessageLogger=false
log4j.appender.messageLog=org.apache.log4j.DailyRollingFileAppender
log4j.appender.messageLog.DatePattern='.'yyyy-MM-dd
log4j.appender.messageLog.File=${logPath}${fs}message.log
log4j.appender.messageLog.layout=org.apache.log4j.PatternLayout
log4j.appender.messageLog.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss.SSSZ} %m%n

